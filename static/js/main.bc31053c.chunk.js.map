{"version":3,"sources":["assets/profile_image_cakelemon.jpg","assets/profile_image_greimul.jpg","components/MemberInfoCard.tsx","components/MainProfile.tsx","components/MainCategory.tsx","contents/game_list/NoIdea/image.png","components/GameInfoCard.tsx","components/GameList.tsx","layouts/Home.tsx","App.tsx","reportWebVitals.ts","utils/history.js","index.tsx"],"names":["useStyles","makeStyles","root","width","height","memberInfo","display","alignItems","justifyContent","memberImage","marginRight","iconNotExpand","transform","iconExpanded","nameContainer","flexDirection","linkContainer","memberName","textAlign","MemberInfoCard","profileImage","memberBlog","memberIntro","memberGithub","classes","useState","className","Card","CardMedia","image","title","Typography","IconButton","onClick","window","open","Home","GitHub","memberInfoContainer","memberCard","dividerStyle","margin","MainProfile","isSlideFinish","isTypoFinish","setTypoFinish","Fade","in","timeout","onEntered","testJson","test","Divider","ProfileImageCakelemon","Cakelemon","intro","blog","github","ProfileImageGreimul","GreimuL","marginLeft","categoryContainer","padding","backgroundColor","categoryItem","MainCategory","setHomeDisplay","Slide","direction","List","Photo","gameImage","minWidth","gameInfo","textContainer","gameTitle","gameDeveloperText","GameInfo","name","link","developer","CardActionArea","GameList","GameInfoCard","game_info","game_image","profileCard","homeDisplay","category","setSlideFinish","homeDisplaySwitch","setHomeDisplaySwitch","App","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","history","createBrowserHistory","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bc31053c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/profile_image_cakelemon.0dcb0c34.jpg\";","export default __webpack_public_path__ + \"static/media/profile_image_greimul.1c14ea6d.jpg\";","import { Card, CardActionArea, CardMedia, Collapse, IconButton, Typography } from \"@material-ui/core\";\r\nimport {  ExpandLessRounded, ExpandMore, GitHub, Home } from \"@material-ui/icons\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width:'210px',\r\n    height:'100px',\r\n  },\r\n  memberInfo: {\r\n    display:'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center|left',\r\n  },\r\n  memberImage: {\r\n    width: '100px',\r\n    height: '100px',\r\n    marginRight: '4px',\r\n  },\r\n  iconNotExpand:{\r\n    transform:'rotate(0deg)',\r\n  },\r\n  iconExpanded:{\r\n    transform:'rotate(180deg)',\r\n  },\r\n  nameContainer:{\r\n    display:'flex',\r\n    flexDirection:'column',\r\n    alignItems:'center',\r\n    justifyContent:'center',\r\n  },\r\n  linkContainer:{\r\n    display:'flex',    \r\n    alignItems:'center',\r\n    justifyContent:'center',\r\n  },\r\n  memberName:{\r\n    textAlign:'center',\r\n  }\r\n})\r\n\r\nexport interface MemberInfoProps{\r\n  profileImage:string,\r\n  memberName:string,\r\n  memberIntro:string,\r\n  memberBlog:string,\r\n  memberGithub:string,\r\n}\r\n\r\nfunction MemberInfoCard({ profileImage, memberName, memberIntro,memberBlog,memberGithub }: MemberInfoProps) {\r\n  const classes = useStyles()\r\n  const [isCollapsed,setCollapsed] = useState(false)\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      {/*<CardActionArea onClick={() => { setCollapsed(!isCollapsed) }}>*/}\r\n\r\n        <Card className={classes.memberInfo}>\r\n          <CardMedia\r\n            className={classes.memberImage}\r\n            image={profileImage}\r\n            title=\"profile\"\r\n          />\r\n          <div>\r\n          <Typography className={classes.memberName}>\r\n            {memberName}\r\n          </Typography>\r\n          <div className={classes.linkContainer}>\r\n          <IconButton onClick={()=>window.open(memberBlog,'_blank')}><Home/></IconButton>\r\n          <IconButton onClick={()=>window.open(memberGithub,'_blank')}><GitHub/></IconButton>\r\n          </div>\r\n          </div>\r\n        </Card>\r\n      {/*\r\n          <ExpandMore className={isCollapsed?classes.iconExpanded:classes.iconNotExpand}/>\r\n        </Card>\r\n      </CardActionArea>\r\n      */}\r\n      {/*\r\n      <Collapse in={isCollapsed}>\r\n        <Typography style={{ whiteSpace: 'pre-line' }}>{memberIntro}</Typography>\r\n\r\n        <Home fontSize=\"medium\" />\r\n        <GitHub fontSize=\"medium\" />\r\n      </Collapse>\r\n      */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MemberInfoCard;\r\n","import { makeStyles } from '@material-ui/core/styles'\r\nimport { Box, Card, Typography, CardMedia, Fade, Slide, CardActionArea, Divider, Collapse } from '@material-ui/core'\r\nimport ProfileImageCakelemon from '../assets/profile_image_cakelemon.jpg'\r\nimport ProfileImageGreimul from '../assets/profile_image_greimul.jpg'\r\nimport { useState } from 'react'\r\nimport { GitHub, Home } from '@material-ui/icons'\r\nimport memberIntro from '../assets/member-introductions.json'\r\nimport MemberInfoCard from './MemberInfoCard'\r\nimport testJson from '../contents/test.json'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '480px',\r\n    height: '480px',\r\n  },\r\n  memberInfoContainer: {\r\n    display:'flex',\r\n    alignItems:'flex-end',\r\n    justifyContent:'space-around',\r\n  },\r\n  memberCard:{\r\n    \r\n  },\r\n  dividerStyle: {\r\n    margin: '4px',\r\n  }\r\n})\r\n\r\nexport interface MainProfileProps{\r\n  isSlideFinish:boolean\r\n}\r\n\r\nfunction MainProfile({isSlideFinish}:MainProfileProps) {\r\n  const classes = useStyles()\r\n  const [isTypoFinish, setTypoFinish] = useState(false)\r\n  return (\r\n    <div className={classes.root}>\r\n          <Fade in={isSlideFinish} timeout={1000}\r\n            onEntered={() => { setTypoFinish(true) }}\r\n          >\r\n            <Typography>\r\n              안녕하세요 Team-Greimon 입니다!\r\n            </Typography>\r\n          </Fade>\r\n          <Fade in={isSlideFinish} timeout={2000}\r\n\r\n          >\r\n            <Typography>\r\n              Team-Greimon 은  2인으로 구성된 게임 개발 동아리입니다. {testJson.test}\r\n            </Typography>\r\n          </Fade>\r\n          <Divider className={classes.dividerStyle} />\r\n          <div className={classes.memberInfoContainer}>\r\n          <Fade in={isTypoFinish} timeout={1000}>\r\n            <div className={classes.memberCard}>\r\n              <MemberInfoCard profileImage={ProfileImageCakelemon} memberName=\"Cakelemon\" memberIntro={memberIntro.Cakelemon.intro} memberBlog={memberIntro.Cakelemon.blog} memberGithub={memberIntro.Cakelemon.github}/>\r\n            </div>\r\n          </Fade>\r\n          <Fade in={isTypoFinish} timeout={2000}>\r\n            <div className={classes.memberCard}>\r\n              <MemberInfoCard profileImage={ProfileImageGreimul} memberName=\"GreimuL\" memberIntro={memberIntro.GreimuL.intro} memberBlog={memberIntro.GreimuL.blog} memberGithub={memberIntro.GreimuL.github}/>\r\n            </div>\r\n          </Fade>\r\n          </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MainProfile;","import { Card, CardActionArea, IconButton, Slide, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Home, List, Photo } from \"@material-ui/icons\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    marginLeft:'8px',\r\n  },\r\n  categoryContainer:{\r\n    display:'flex',\r\n    padding:'8px',\r\n    flexDirection:'column',\r\n    backgroundColor:'#FFFFFF',\r\n  },\r\n  categoryItem:{\r\n  }\r\n})\r\n\r\nexport interface MainCategoryProps{\r\n  setHomeDisplay:(category:string)=>(void)\r\n}\r\n\r\nfunction MainCategory({setHomeDisplay}:MainCategoryProps) {\r\n\r\n  const classes = useStyles()\r\n  return (\r\n    <div className={classes.root}>\r\n      <Slide direction=\"down\"\r\n        in={true}\r\n        timeout={1500}\r\n      >\r\n    <Card className={classes.categoryContainer}>\r\n      <IconButton className={classes.categoryItem} onClick={()=>setHomeDisplay('Profile')}>\r\n        <Home/>\r\n      </IconButton>\r\n      <IconButton className={classes.categoryItem} onClick={()=>setHomeDisplay('LogList')}>\r\n        <List/>\r\n      </IconButton>\r\n      <IconButton className={classes.categoryItem} onClick={()=>setHomeDisplay('GameList')}>\r\n        <Photo/>\r\n      </IconButton>\r\n    </Card>\r\n    </Slide>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default MainCategory;","export default __webpack_public_path__ + \"static/media/image.21f12707.png\";","import { Card, CardActionArea, CardContent, CardMedia, makeStyles, Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '480px',\r\n    height: '100px',\r\n  },\r\n  gameImage:{\r\n    minWidth:'100px',\r\n    height:'100px',\r\n  },\r\n  gameInfo:{\r\n    display:'flex',\r\n    alignItems:'center',\r\n  },\r\n  textContainer:{\r\n    display:'flex',\r\n    flexDirection:'column',\r\n    marginLeft:'16px',\r\n  },\r\n  gameTitle:{\r\n\r\n  },\r\n  gameDeveloperText:{\r\n\r\n  }\r\n\r\n})\r\n\r\nexport interface GameInfoProps{\r\n  link:string,\r\n  image:string,\r\n  name:string,\r\n  developer:string\r\n}\r\n\r\nfunction GameInfo({name,link,image,developer}:GameInfoProps) {\r\n  const classes = useStyles()\r\n  return (\r\n    <div className={classes.root}>\r\n      <CardActionArea onClick={()=>window.open(link,'_blank')}>\r\n        <Card className={classes.gameInfo}>\r\n        <CardMedia \r\n            className={classes.gameImage}\r\n            image={image}\r\n            title={name}\r\n          />\r\n          <div className={classes.textContainer}>\r\n          <Typography>\r\n            {name}\r\n          </Typography>\r\n          <Typography>\r\n            {developer}\r\n          </Typography>\r\n          </div>\r\n        </Card>\r\n      </CardActionArea>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GameInfo;","import { Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { useEffect, useState } from \"react\";\r\nimport game_image from \"../contents/game_list/NoIdea/image.png\"\r\nimport game_info from \"../contents/game_list/NoIdea/info.json\"\r\nimport { GameInfo } from \"../types/FileTypes\";\r\nimport GameInfoCard from \"./GameInfoCard\";\r\nimport * as fs from 'fs'\r\n\r\nconst  useStyles =  makeStyles({\r\n  root:{\r\n    display:'flex',\r\n    width:'480px',\r\n    height:'480px',\r\n  }\r\n})\r\n\r\nfunction  GameList(){\r\n  const classes = useStyles()\r\n  const [gameList,setGameList]= useState<Array<GameInfo>>([])\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <GameInfoCard name={game_info.name} link={game_info.link} image={game_image} developer={game_info.developer}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GameList;","import MainProfile from \"../components/MainProfile\";\r\nimport { Container, makeStyles, Box, Card, Slide } from \"@material-ui/core\";\r\nimport MainCategory from \"../components/MainCategory\";\r\nimport { useState } from \"react\";\r\nimport GameList from \"../components/GameList\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100vw',\r\n    height: '100vh',\r\n    backgroundColor: '#F7E7B1',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    display: 'flex',\r\n\r\n  },\r\n  profileCard: {\r\n    width: '480px',\r\n    height: '480px',\r\n    padding: '16px',\r\n  },\r\n})\r\n\r\nfunction homeDisplay(category:string,isSlideFinish:boolean){\r\n  switch (category) {\r\n    case 'Profile':\r\n      return <MainProfile isSlideFinish={isSlideFinish}/>\r\n    case 'LogList':\r\n      break;\r\n    case 'GameList':\r\n      return <GameList />\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction Home() {\r\n  const classes = useStyles()\r\n  const [isSlideFinish, setSlideFinish] = useState(false)\r\n  const [homeDisplaySwitch,setHomeDisplaySwitch] =  useState(\"Profile\")\r\n  return (\r\n    <div className={classes.root}>\r\n      <Slide direction=\"down\"\r\n        in={true}\r\n        timeout={1000}\r\n        onEntered={()=>{setSlideFinish(!isSlideFinish)}}>\r\n        <Card className={classes.profileCard}>\r\n          {homeDisplay(homeDisplaySwitch,isSlideFinish)}\r\n        </Card>\r\n      </Slide>\r\n      <MainCategory setHomeDisplay={(category:string)=>{\r\n          switch (category) {\r\n            case 'Profile':\r\n              setHomeDisplaySwitch('Profile')\r\n              break\r\n            case 'LogList':\r\n              setHomeDisplaySwitch('LogList')\r\n              break\r\n            case 'GameList':\r\n              setHomeDisplaySwitch('GameList')\r\n              break\r\n            default:\r\n              break\r\n          }\r\n      }}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Home from './layouts/Home';\nimport {Switch, Route} from 'react-router-dom'\nimport NotFound from './layouts/NotFound';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport  fs  from 'fs'\n\nfunction App() {\n  return (\n    <>\n      <Switch>\n        <Route render={()=><Home/>}/>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createBrowserHistory } from 'history';\r\n\r\nconst history = createBrowserHistory();\r\nexport default history;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Router} from 'react-router-dom'\nimport history from './utils/history'\n\nReactDOM.render(\n  <Router history = {history}>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}